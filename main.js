!function(){"use strict";class e{#e;#t;#s;#r;#i;#n;#o;#l;#a;constructor(e,t,s){let{url:r,title:i}=e;this.#e=i,this.#t=r,this.#s={title:this.#e,link:this.#t},this.#a=t.bind(this),this.#r=s}#c=()=>{this.#n.classList.toggle("card__button_type_like-active")};#d=()=>{this.#i.remove(),this.#i=null};#u=()=>{this.#n=this.#i.querySelector(".card__button_type_like-inactive"),this.#o=this.#i.querySelector(".card__button_type_delete"),this.#l=this.#i.querySelector(".card__image"),this.#n.addEventListener("mousedown",(()=>{this.#c()})),this.#o.addEventListener("mousedown",(()=>{this.#d()})),this.#l.addEventListener("mousedown",(()=>{this.#a()}))};getCardInfo(){return this.#s}createCard=()=>{this.#i=document.querySelector(this.#r).content.querySelector(".card").cloneNode(!0);const e=this.#i.querySelector(".card__image"),t=this.#i.querySelector(".card__title");return e.src=this.#t,e.alt=this.#e,t.textContent=this.#e,this.#u(),this.#i}}class t{#m;constructor(e){this.#m=document.querySelector(e)}getPopupElement=()=>this.#m;#p=e=>{"Escape"===e.key&&this.close()};handleClick=e=>{const t=e.target;(t.classList.contains("modal")||t.classList.contains("modal__cancel-button"))&&this.close()};open(){this.#m.classList.add("modal_opened"),document.addEventListener("keydown",this.#p)}close(){this.#m.classList.remove("modal_opened"),document.removeEventListener("keydown",this.#p)}setEventListeners(){this.#m.addEventListener("mousedown",this.handleClick)}}class s extends t{#h;#f;#E;#g;constructor(e,t){super(e),this.#f=this.getPopupElement().querySelector(".modal__form-container"),this.#E=this.#_(),this.#g=t}#_(){const e={};return this.#f.querySelectorAll(".modal__input").forEach((t=>{e[t.id]=t})),e}getInputValues=()=>{const e={};return Object.keys(this.#E).forEach((t=>{e[t]=this.#E[t].value})),e};setEventListeners=()=>{super.setEventListeners(),this.getPopupElement().addEventListener("submit",this.#g)};close(){super.close(),this.#f.reset()}}class r{#C;#v;#S;#y;#L;#I;#k;#b;constructor(e,t){this.#C=e.inputSelector,this.#v=e.submitButtonSelector,this.#y=e.inactiveButtonClass,this.#L=e.inputErrorClass,this.#I=e.errorClass,this.#k=t,this.#S=this.#k.querySelector(this.#v)}#w(e){const t=this.#k.querySelector(`.${e.id}-error`);e.classList.add(this.#L),t.textContent=e.validationMessage,t.classList.add(this.#I)}#B(e){const t=this.#k.querySelector(`.${e.id}-error`);e.classList.remove(this.#L),t.classList.remove(this.#I),t.textContent=""}#q(e){e.validity.valid?this.#B(e):this.#w(e)}#F(){return this.#b.some((e=>!e.validity.valid))}#j(){this.#F()?(this.#S.disabled=!0,this.#S.classList.add(this.#y)):(this.#S.disabled=!1,this.#S.classList.remove(this.#y))}resetValidation(){this.#j(),this.#b.forEach((e=>{this.#B(e)}))}enableValidation(){this.#b=[...this.#k.querySelectorAll(this.#C)],this.#j(),this.#b.forEach((e=>{e.addEventListener("input",(t=>{this.#j(),this.#q(e)}))}))}}const i=document,n="profile-form",o="card-form",l={profileForm:i.forms[n],addCardForm:i.forms[o]},a=".card-modal",c=".profile-modal",d=".preview-modal",u="#card_template",m=(l.profileForm.querySelector(".name-input"),l.profileForm.querySelector(".description-input"),l.addCardForm.querySelector(".title-input"),l.addCardForm.querySelector(".link-input"),{profileEditButton:i.querySelector(".profile__edit-button"),addCardButton:i.querySelector(".profile__add-button")}),p={editorName:l.profileForm.elements.name,editorDescription:l.profileForm.elements.description,cardName:l.addCardForm.elements.name,cardURL:l.addCardForm.elements.url},h={galleryCardList:i.querySelector(".gallery__cards"),profileName:i.querySelector(".profile__name"),profileDescription:i.querySelector(".profile__description")},f=new class{#V;#x;#D;#N;constructor(e,t){this.#V=e,this.#x=t,this.#D=this.#V.textContent,this.#N=this.#x.textContent}getUserInfo(){return{name:this.#D,description:this.#N}}setUserInfo(e){let{name:t,description:s}=e;this.#D=t,this.#N=s,this.#V.textContent=this.#D,this.#x.textContent=this.#N}}(h.profileName,h.profileDescription),E=new class extends t{#z;#P;constructor(e){super(e),this.#z=this.getPopupElement().querySelector(".modal__image"),this.#P=this.getPopupElement().querySelector(".modal__image-title"),console.log(this.#P)}open(e){let{link:t,title:s}=e;this.#z.src=t,this.#z.alt=s,this.#P.textContent=s,super.open()}}(d);E.setEventListeners();const g=new s(c,(function(e){e.preventDefault(),f.setUserInfo(g.getInputValues()),g.close()}));g.setEventListeners();const _=new s(a,(function(e){e.preventDefault();const t=y(_.getInputValues());C.prependItem(t),_.close()}));_.setEventListeners();const C=new class{#U;#A;#T;constructor(e,t,s){this.#U=e,this.#A=t.bind(this),this.#T=s}appendItem(e){this.#T.append(e)}prependItem(e){this.#T.prepend(e)}renderItems(){this.#U.forEach((e=>{this.#A(e)}))}}([{title:"Yosemite Valley",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{title:"Lake Louise",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{title:"Bald Mountains",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{title:"Latemar",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{title:"Vanoise National Park",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{title:"Lago di Braies",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],(function(e){const t=y(e);C.appendItem(t)}),h.galleryCardList);C.renderItems();const v={};var S;function y(t){const s=new e(t,(()=>{E.open(s.getCardInfo())}),u);return s.createCard()}S={formSelector:".modal__form-container",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},[...document.querySelectorAll(S.formSelector)].forEach((e=>{const t=new r(S,e);t.enableValidation(),v[e.getAttribute("id")]=t})),m.profileEditButton.addEventListener("click",(()=>{const e=f.getUserInfo();p.editorName.value=e.name,p.editorDescription.value=e.description,g.open(),v[n].resetValidation()})),m.addCardButton.addEventListener("click",(()=>{_.open(),v[o].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,